//******************************************************
//  This is the last file for the 8TSC/2P the new 4,6&8TSC with 2 prong receptacles
//  and all 256 slots used. Seq # 256   11111111  chases backwards.
// This was before rearranging the files for the 4,6&8T Programmables.
// Kevin gave me back this file as the last one that he had compiled.
// I am going to use this file to update any new sequences for the 8TSC. 10-19-16
//  starting with adding some sequences that should be on the programmable controllers
// but Kevin has not gotten them to be able to be programmed by me at this time. 10-18-16
// This is the File that I am going to update for 2015  as of 10-9-15
// This is the Up to date  8TSC patterns. as of 12-04 and 10-07
//   seqUENCE TABLES FOR CHASER 125 sequences est.
//   Added the rest of the 4TC R Sequences. 10-7-15
//******************************************************
//------------------------------------------------------
//  REVISION HISTORY
//
//  1st-try.H            2598 lines  as of 10-27-99
//  991110   KLC   Modified seq220, 252 for build-up
//  991111   ND    Lots of changes
//  991114   ND    Added Version 2s for Back & Forth
//                 and both chase w/ delay on one and
//                 with chase w/ delay on 1 and last.
//  000208   ND    Slowed down a lot of sequences. Add  2000-Feb-8th
//                 Version 2 to Chase W delays on 1&last
//  000303   ND    Cont. to slow down seq.
//  000411   ND    Added seq #33 Special#1 Baseball
//  000411   ND    Added a seq for Dump Truck for CAD
//                 seq #158 4T Build Up V2.
//  000522   ND    Added seq #65 special #2 Golfer
//  000531   ND    Added seq #97 Special #3 Throwing
//  000601   ND    Added seq #129 Spec #4 Snowball fight
//  000601   ND    Added seq #161 Spec #5 2 Arm Tennis
//  000601   ND    Added seq #193 Spec #6 3 Arm Tennis
//                 ,1 still available
//  000913   ND    Added seq #225 Spec #7 Cannon
//  000604   ND    Add 8T on for last 2 steps of 4,5,6,7TCV2
//                    seq# 162,194,226
//  000715   ND   On 3&4T Multi, Doubled the pattern
//  000921   ND   Chase Ver.3  Added throwing seq to 3T-7T
//  001023   ND   Added 4T Neg Chase Ver3 All 8 tracks seq#133
//  001101   ND   Added 4T Multi Ver3 for Carosel seq#155 and slower Chase 187
//  001110   ND   Added 8TC to left for seq #255 to test dipswitch setting 11111111
//  001110   ND   Added Special #8 Fishing seq #67 Setting 01000011
//  001212   ND   On 6T Multi Ver1 made Track 7&8 on all the time.
//  010427   ND   Added Special #9 Bowler seq #1 Setting 00000001
//  010731   ND   Having a problem with this program on 7-31-01
//                Kevin changed program to give me more steps.8-3-01
//  010926   ND   Fixed a problem W 7TBuild up seq #252 1/2 time it would not turn
//                  off #1 befor repeating.
//  011004   ND   Added 8T Build Up & Dn Ver2. seq #26 Cascade, Walking ???11010
//  011005   ND   Added Build Up/Dn Cascade for all 4 & 6T chase modes seq 154&218
//  011005   ND   Doubled the 3&4TC Pattern seq #128& #96
//  011110   ND   Added Special #13 Golfer 2 seq #195 W/3Back clubs& 5 balls 11000011
//                      special Golfer is for Light Works 
//  011124   ND   Added 1TC to 7T Build Up and Dn seq # 248  setting 11111000
//  011124   ND   Added 2TC to 4,5&6T Build Up & Down # 152, 184 & 216 Ver 1
//  011124   ND   Added Fast 3TC and Med 2TC to 3T Build Up & Dn seq 120, 01111000 
//  011201   ND   Added T7 on except when T1 is on, T8 on except when Last Track is on
//                 on all Back and Forth patterns from 3 to 7 track patterns.
//  092502   ND   Even the chips with the 8K smallest memory, All of the patterns 
//                work OK except the last seq #255 8t Chase to the left, used to
//                test the dip switch slides.  11111111 = #255
//  021017   ND   10-17-02 Added a special Golfer seq for Light Works #195  11000011
//    Next changes add Build Up & Dn Ver3 W No Delay on All On For Lou Ossip            
//  042103   ND   seq 64 2TC V2 added steps to slow it down to a Max of 6 sec per step.
//  092903   ND   Added Ver2 Cannon 3Pos arm and 5 balls seq 62 setting 00111110
//  111203   ND   Added more steps to all chase VER2 except 8TC to slow down to 6 sec.
//  071704   ND   Added an All On seq.#3 00000011 7-04 as part of the permenent program.
//  111904   ND   Deleted the 7TC W/delay on 1 and 7 Ver 2   seq 246 to make room.    
//  042406   ND   Modified all Neg Chase seq. W/Only 1 step to run faster.
//  090106   ND   Fixed seq 154&218 4&6 Build Up & Dn. Ver2 5&7T seq disconected.
//  151004   ND   2015-Oct 4th Added 16 Repurpose seq for the 2,3&4 Track Chase
//  151004   ND   Also made some other minor changes. I could not find the last File I made before
//                  I changed the order of the seq to be able to use it for the 8tp NEW CONTROLLER.
//  151007   ND   Added 6 more seq for the Repurpose 4TC  Seq 61 - 73   10-7-15
//  151009   KC   Fixed formatting issues so the file would compile
//  151011   ND   Added 3 Peacock Seq   4T at #189, 6T at 190 &  8T at 191 setting 10111111
//  151225   ND   Added a temp seq for GPD Penjuin Throwing a Snowball 7T Bowler hits pins at Step 5 Added at slot #29 for now
//  161018   ND   Added sequences at temp slots for GPD Slot 30 Baseball display, elf hits ball into the outfield
//  161018   ND   Added sequence at temp slot 31  for GPD  Cannon shooting diamonds into an open box.
//  161018   ND   Added seq for PENGUINS FISHING for Hermans Christmas  10-18-16  for 4TSC/2P
//  161018   ND   Added seq for Hermans Christmas 2 Penguins Fishing 4TSC  Slot # 32   added these words after the first compiling.
//  161019   ND   Added seq for AAC for Toy Factory Convayor Belt  8TSC  slot# 34  Had to have Kevin recompile theses again.
//--------------------------------------------------------------------------------


//*********************************************
//            SEQUENCE TABLES
//
//  These tables are made up of a series of
//  bytes.  Each byte represents one step of
//  a sequence.  The bits of each byte
//  represent one of the corresponding tracks
//  of the chaser.
//
//*********************************************

const byte sequence0[] = {
// eight track chase   Version 1
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001
};

const byte sequence1[] = {
//Other Special seq. #8  Bowler, reverse of Throwing a Ball
//      Track 8 stays on W/step 1 through 6 and then goes off for step 7.
//   4X delay on step #1, 4X delay on last step #7.
//   as a bowler the arm would dissapears after step 2.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence2[] = {
// eight track chase  Version 2  Slow Chase  6X need to add 6 more steps to each
//  shift of the chase. Allready done for all 6 of the other chase Ver 2 11-12-03
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence3[] = {
// Added an All On sequence 7-17-04 as part of the permenent program.Setting 00000011
    B11111111,
    B11111111
};

const byte sequence4[] = {
// 8T Negitive Chase 1 out   1Step per Track
    B01111111,
    B10111111,
    B11011111,
    B11101111,
    B11110111,
    B11111011,
    B11111101,
    B11111110
};

const byte sequence5[] = {
// Temp  Special pattern for Ozark Christmas Lights
// Flag             10-12-00 Use  00000101
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11101000,
    B11100100,
    B11100010,
    B11100000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};


const byte sequence6[] = {
// 8T Negitive Chase 2 out  Version 2  2Tracks Out  1X
    B00111111,
    B10011111,
    B11001111,
    B11100111,
    B11110011,
    B11111001,
    B11111100,
    B01111110
};

const byte sequence7[] = {
    B00000000
};

const byte sequence8[] = {
// Eight track, Back and Forth Version 1    No Delays
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000010,
    B00000010,
    B00000010,
    B00000100,
    B00000100,
    B00000100,
    B00001000,
    B00001000,
    B00001000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence9[] = {
// Eight track, Back and Forth W/6X Delays  Version 3
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000010,
    B00000010,
    B00000010,
    B00000100,
    B00000100,
    B00000100,
    B00001000,
    B00001000,
    B00001000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence10[] = {
// Eight track, Back and Forth W/4X Delays  Version 2
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000010,
    B00000010,
    B00000010,
    B00000100,
    B00000100,
    B00000100,
    B00001000,
    B00001000,
    B00001000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence11[] = {
    B00000000
};

const byte sequence12[] = {
// 8T Speller
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B00000000,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence13[] = {
//  Use as a Temp Slot for Programmed Seq.  Spooked Deer  for Hol Designs
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence14[] = {
    B00000000
};

const byte sequence15[] = {
    B00000000
};

const byte sequence16[] = {
// 8T Chase W/delay on #1   Ver.1  W/4X delays   Steps X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence17[] = {
    B00000000
};

const byte sequence18[] = {
// 8T Multi sequences
//    Chase Rt 4X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001, 
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001, 
//    Chase Lt 6X
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 4X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000
};

const byte sequence19[] = {
// 8T Chase W/delay on #1   Ver.2  W/6X delays  Steps X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence20[] = {
// 8T Chase W/delay on 1st & Last  Ver.1  6X delay  Step X7
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence21[] = {
    B00000000
};

const byte sequence22[] = {
// 8T Chase W/delay on 1st & Last  Ver.2  6 X delay
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence23[] = {
    B00000000
};

const byte sequence24[] = {
// 8T Build Up & Down W/ delay on up     4X delay   Step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence25[] = {
    B00000000
};

const byte sequence26[] = {

// 8T Build Up & Down Cascade W/ delay on up     4X delay   Step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000000,
    B00000000,
    B00000000
};
 
const byte sequence27[] = {
    B00000000
};

const byte sequence28[] = {
// 8T Build Up W/ delay on up    4X Delay  step 5X
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000
};

const byte sequence29[] = {
// Penguin Knock of hat  w/5 balls and
// Hits hat on step 5, hat continues 2 steps to the ground.   Temp slot #29  GP  10-18-16
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000010,
    B01000010,
    B01000010,
    B00100010,
    B00100010,
    B00100010,
    B00010010,
    B00010010,
    B00010010,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100

};

const byte sequence30[] = {
// Baseball w 6 balls hit into the outfield.   Temp Slot   for GPD   10-18-16
//      Elf hitting a ball from santa caught by elf in the outfield.                                           
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10100001,
    B10100001,
    B10100001,
    B01000001,
    B01000001,
    B01000001,
    B10100001,
    B10100001,
    B10100001,
    B10100001,
    B10001001,
    B10001001,
    B10001001,
    B10000101,
    B10000101,
    B10000101,
    B10000011,
    B10000011,
    B10000011,
    B10000011,
    B10000011,
    B10000011,
    B10000011,
    B10000011,
    B10000011,
    B10000011
    
};

const byte sequence31[] = {
//Canon shooting  Diamonds   for GPD   special   Slot # 31   Temp    10-18-16
//    Temp slot  GP  10-18-16
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B01100001,
    B01100001,
    B01100001,
    B01010001,
    B01010001,
    B01010001,
    B10001001,
    B10001001,
    B10001001,
    B10000101,
    B10000101,
    B10000101,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010
};

const byte sequence32[] = {
// 2 Penguin fishing  Only needs 4Tracks
// 2-2pos. arms on Penguin #1, 2 Positions of #2 Penguin.
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01100000,
    B01100000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B01010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000

};

const byte sequence33[] = {
// 1st Other Pattern. Baseball w/6 balls and
// 2-2pos. arms, lights up ball 4,3&2 after hit.For Herman Christmas Temp slot 10-19-16
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00001010,
    B00001010,
    B00001010,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011,
    B00000111,
    B00000111,
    B00000111,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011
};

const byte sequence34[] = {
// Temp slot #34   for a converyer belt for Toy factory  for ALL American Christmas.
// 2-boxes per receptacle  (step) on the belt.     8 Track Seq          Temp slot  #34   10-19-16
    B10001111,
    B10001111,
    B10001111,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B10001000,
    B10001000,
    B10001000,
    B01001000,
    B01001000,
    B01001000,
    B00101000,
    B00101000,
    B00101000,
    B00011000,
    B00011000,
    B00011000,
    B00001100,
    B00001100,
    B00001100,
    B10001100,
    B10001100,
    B10001100,
    B01001100,
    B01001100,
    B01001100,
    B00101100,
    B00101100,
    B00101100,
    B00011100,
    B00011100,
    B00011100,
    B00001110,
    B00001110,
    B00001110,
    B10001110,
    B10001110,
    B10001110,
    B01001110,
    B01001110,
    B01001110,
    B00101110,
    B00101110,
    B00101110,
    B00011110,
    B00011110,
    B00011110,
    B00001111,
    B00001111,
    B00001111


};

const byte sequence35[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 3T
//      Track 3 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #2.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000,
    B01100000
};

const byte sequence36[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 4T
//      Track 4 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #3.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01010000,
    B01010000,
    B01010000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000,
    B00110000
};

const byte sequence37[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 5T
//      Track 5 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #4.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01001000,
    B01001000,
    B01001000,
    B00101000,
    B00101000,
    B00101000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000,
    B00011000
};

const byte sequence38[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 6T
//      Track 6 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #5.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000100,
    B01000100,
    B01000100,
    B00100100,
    B00100100,
    B00100100,
    B00010100,
    B00010100,
    B00010100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100,
    B00001100
};

const byte sequence39[] = {
//Other Special Seq. #3  Basketball,Throwing a Ball  for 7T
//      Track 7 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #6.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000010,
    B01000010,
    B01000010,
    B00100010,
    B00100010,
    B00100010,
    B00010010,
    B00010010,
    B00010010,
    B00001010,
    B00001010,
    B00001010,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110
};

const byte sequence40[] = {
//Repurpose    2TC A for all controllers  
    B10101010,
    B10101010,
    B01010101,
    B01010101
};

const byte sequence41[] = {
//Repurpose    2TC B for all controllers  
    B11001100,
    B11001100,
    B00110011,
    B00110011
};

const byte sequence42[] = {
//Repurpose    2TC C for all controllers  
    B11110000,
    B11110000,
    B00001111,
    B00001111
};

const byte sequence43[] = {
//Repurpose    3TC A OF 8 for all controllers  
    B10010010,
    B10010010,
    B01001001,
    B01001001,
    B00100100,
    B00100100
};

const byte sequence44[] = {
//Repurpose    3TC B OF 8 for all controllers  
    B11100000,
    B11100000,
    B00011100,
    B00011100,
    B00000011,
    B00000011
};

const byte sequence45[] = {
//Repurpose    3TC C OF 8 for all controllers  
    B11000000,
    B11000000,
    B00111000,
    B00111000,
    B00000111,
    B00000111
};

const byte sequence46[] = {
//Repurpose    3TC D OF 8 for all controllers  
    B10100000,
    B10100000,
    B01011000,
    B01011000,
    B00000111,
    B00000111
};

const byte sequence47[] = {
//Repurpose    3TC E OF 8 for all controllers  
    B10000000,
    B10000000,
    B01100010,
    B01100010,
    B00011001,
    B00011001
};

const byte sequence48[] = {
//Repurpose    3TC F OF 8 for all controllers  
    B11000000,
    B11000000,
    B00110010,
    B00110010,
    B00001101,
    B00001101
};

const byte sequence49[] = {
//Repurpose    3TC G OF 8 for all controllers  
    B00010000,
    B00010000,
    B00001100,
    B00001100,
    B00000011,
    B00000011
};

const byte sequence50[] = {
//Other Special Seq. Like a Bowler, but it Hits the pins at step #5
//      Track 8 stays on W/step 1 through 4 and then goes off for step 5-7.
//   4X delay on step #1, 4X delay on last step #7.
//   as a bowler the arm would dissapears after step 2.  added 10-24-13
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence51[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a Ball    For  3T
//      Track 3 stays on W/step 1 through 2 and then goes off for step 2.
//   4X delay on step #1, 4X delay on last step #4.
//   as a bowler the arm would dissapears after step 2.
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B10100000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence52[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a Ball    For  4T
//      Track 4 stays on W/step 1 through 2 and then goes off for step 3.
//   4X delay on step #1, 4X delay on last step #4.
//   as a bowler the arm would dissapears after step 2.
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B01010000,
    B01010000,
    B01010000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};

const byte sequence53[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a Ball    For  5T
//      Track 5 stays on W/step 1 through 3 and then goes off for step 4.
//   4X delay on step #1, 4X delay on last step #5.
//   as a bowler the arm would dissapears after step 2.
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B01001000,
    B01001000,
    B01001000,
    B00101000,
    B00101000,
    B00101000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000
};

const byte sequence54[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a Ball   For  6T
//      Track 6 stays on W/step 1 through 4 and then goes off for step 5.
//   4X delay on step #1, 4X delay on last step #6.
//   as a bowler the arm would dissapears after step 2.
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B01000100,
    B01000100,
    B01000100,
    B00100100,
    B00100100,
    B00100100,
    B00010100,
    B00010100,
    B00010100,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
};

const byte sequence55[] = {
//Other Special Seq. #8  Bowler, reverse of Throwing a BallFor  7T
//      Track 7 stays on W/step 1 through 5 and then goes off for step 6.
//   4X delay on step #1, 4X delay on last step #7.
//   as a bowler the arm would dissapears after step 2.
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000010,
    B01000010,
    B01000010,
    B00100010,
    B00100010,
    B00100010,
    B00010010,
    B00010010,
    B00010010,
    B00001010,
    B00001010,
    B00001010,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence56[] = {
//Repurpose    3TC H OF 8 for all controllers  
    B00011000,
    B00011000,
    B00000110,
    B00000110,
    B00000001,
    B00000001
};

const byte sequence57[] = {
//Repurpose    4TC A OF 5 for all controllers  
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00010001,
    B00010001
};

const byte sequence58[] = {
//Repurpose    4TC B OF 5 for all controllers  
    B10000011,
    B10000011,
    B01000000,
    B01000000,     
    B00100000,
    B00100000,
    B00011100,
    B00011100
};

const byte sequence59[] = {
//Repurpose    4TC C OF 5 for all controllers  
    B11000001,
    B11000001,
    B00100000,
    B00100000,     
    B00010000,
    B00010000,
    B00001110,
    B00001110
};

const byte sequence60[] = {
//Repurpose    4TC D OF 5 for all controllers  
    B11000011,
    B11000011,
    B00100000,
    B00100000,     
    B00011000,
    B00011000,
    B00000100,
    B00000100
};

const byte sequence61[] = {
//Repurpose    4TC E OF 5 for all controllers  
    B11100000,
    B11100000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00000111,
    B00000111
};

const byte sequence62[] = {
// Version 2 for the Special Cannonball sequence.
// 3 arm positions, and up to 5 balls. 
// 1Wdelay,2Wdelay,3Wdelay,2&4,1&5,1&6,1&7,1&8
// eight track chase   Version 1  Fast  3X
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B01010000,
    B01010000,
    B01010000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001
};


const byte sequence63[] = {
//Repurpose    4TC F OF 11 for all controllers  
    B10000000,
    B10000000,
    B01100000,
    B01100000,
    B00011000,
    B00011000,
    B00000111,
    B00000111
};

const byte sequence64[] = {
// two track chase
    B10101010,
    B01010101
};

const byte sequence65[] = {
//Other seq, #2  Golfer1 W/3 clubs and 6 balls
// 7-27-01 Special sequence #2. W 2 practice swings. 
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B00100000,
    B00100000,
    B01010000,
    B01010000,
    B01001000,
    B01001000,
    B01000100,
    B01000100,
    B01000010,
    B01000010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

 
const byte sequence66[] = {

// two track chase  Version 2  Slow Chase. Added 6 more steps to slow it
// down from a max of 3 sec to a max of 6 sec. Had 6 steps, now 12 steps.
// and used some extra tracks as backups.
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B10001100,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};


// Special seq. Fishing   Setting 01000011  added 11-11-00
const byte sequence67[] = {
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B00110000,
    B00110000,
    B00110000,
    B00101000,
    B00101000,
    B00101000,
    B00100100,
    B00100100,
    B00100100,
    B00100010,
    B00100010,
    B00100010,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B00100001
};
 
const byte sequence68[] = {
//Repurpose    4TC G OF 11 for all controllers  
    B10000010,
    B10000010,
    B01000001,
    B01000001,
    B00110000,
    B00110000,
    B00001100,
    B00001100
};

const byte sequence69[] = {
//Repurpose    4TC H OF 11 for all controllers  
    B10000000,
    B10000000,
    B01111000,
    B01111000,
    B00000100,
    B00000100,
    B00000011,
    B00000011
};

const byte sequence70[] = {
//Repurpose    4TC I OF 11 for all controllers  
    B11100000,
    B11100000,
    B00011000,
    B00011000,
    B00000100,
    B00000100,
    B00000011,
    B00000011
};

const byte sequence71[] = {
//Repurpose    4TC J OF 11 for all controllers  
    B11000000,
    B11000000,
    B00111100,
    B00111100,
    B00000010,
    B00000010,
    B00000001,
    B00000001
};

const byte sequence72[] = {
// Two track, Back and Forth W/4X Delays Version 1
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};


const byte sequence73[] = {
//Repurpose    4TC K OF 11 for all controllers  
    B10010000,
    B10010000,
    B01001000,
    B01001000,
    B00100100,
    B00100100,
    B00000011,
    B00000011
};

const byte sequence74[] = {
// Two track, Back and Forth W/4X Delays Version 2
// Had too remove on 12-1-01  ran out of steps
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};


const byte sequence75[] = {
    B00000000
};

const byte sequence76[] = {
// 2T Speller
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B00000000,
    B11000000,
    B00000000,
    B11000000,
    B00000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence77[] = {

//Other Special Seq.  Bowler, reverse of Throwing a BallFor  7T
//      Track 7 stays on W/step 1 through 5 and then goes off for step 6.
//   4X delay on step #1, 4X delay on last step #7.
//   as a bowler the arm would dissapears after step 2.
//   Bowling Seq T8 on for 5 steps and off for step 6&7 For Hall  Twin Lakes
//   We may want to m ove this seq  12-25-15
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010

};

const byte sequence78[] = {
    B00000000
};

const byte sequence79[] = {
    B00000000
};

const byte sequence80[] = {
// 2T Chase W/3X delay on #1    step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence81[] = {
    B00000000
};

const byte sequence82[] = {
    B00000000
};

const byte sequence83[] = {
// 2T Chase W/delay on #1  Ver.2  W 8X delays  
// W/2TC & 3PA Slow Step X7
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};
 

const byte sequence84[] = {
// 2T Chase W/delay on 1st & Last    W/4X delay    step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence85[] = {
    B00000000
};

const byte sequence86[] = {
// 2T Chase W/delay on 1st & Last  Ver.2  W/6X delays  
// W/2TC on Step#1,Slow and Fast
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10001001,
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};


const byte sequence87[] = {
    B00000000
};

const byte sequence88[] = {
// 2T Build Up & Down W/ delay on up  Ver1  3X Delay Step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence89[] = {
    B00000000
};

const byte sequence90[] = {

// 2T Build Up & Down  Cascade V2 W/ delay on up   W/2X delay on up   
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B01000000,
    B01000000,
    B00000000,
    B00000000
};

const byte sequence91[] = {
    B00000000
};

const byte sequence92[] = {
// 2T Build Up W/4X delay on 2, Ver1  W/2TC Slow, Listed ON Label
// Med & Fast  step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11010101,
    B11010110,
    B11010101,
    B11011010,
    B11011001,
    B11011010,
    B11100101,
    B11100110,
    B11100101,
    B11101010,
    B11101001,
    B11101010,
    B11010101,
    B11010110,
    B11010101,
    B00000000,
    B00000000
};

const byte sequence93[] = {
    B00000000
};

const byte sequence94[] = {
// 2T Build Up W/3X delay on 2  Ver1   W/2TC Slow, Fast & Slower  Not on Label
    B10000000,
    B10000000,
    B10000000,
    B11101010,
    B11100110,
    B11011010,
    B11010101,
    B11101001,
    B11100101,
    B11011010,
    B11010110,
    B11101010,
    B00000000,
    B00000000
};

const byte sequence95[] = {
    B00000000
};

const byte sequence96[] = {
// three track chase
    B10010010,
    B01001001,
    B00100100
};

const byte sequence97[] = {
//Other Special seq. #3  Basketball,Throwing a Ball
//      Track 8 comes on W/step 2 and stays on.
//   4X delay on step #1, 3X delay on last step #7.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011
};


const byte sequence98[] = {
// three track chase  Version 2  Slow Chase on 11-03 changed fr 6 steps to 12.
//  added Throwing seq to this  T8 comes on for step 2&3
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B10010000,
    B01001001,
    B01001001,
    B01001001,
    B01001001,
    B01001001,
    B01001001,
    B01001001,
    B01001001,
    B01001001,
    B01001001,
    B01001001,
    B01001001,
    B00100101,
    B00100101,
    B00100101,
    B00100101,
    B00100101,
    B00100101,
    B00100101,
    B00100101,
    B00100101,
    B00100101,
    B00100101,
    B00100101
};

const byte sequence99[] = {
    B00000000
};

const byte sequence100[] = {
// 3T Negitive Chase
    B01100110,
    B10101010,
    B11001100
};

const byte sequence101[] = {
    B00000000
};

const byte sequence102[] = {
    B00000000
};

const byte sequence103[] = {
//Chase Ver3  Throwing Seq. No delay    3T
//      Track 8 comes on W/step 2 and stays on.

    B10001000,
    B10001000,
    B10001000,
    B01000101,
    B01000101,
    B01000101,
    B00100011,
    B00100011,
    B00100011
};

const byte sequence104[] = {
// three track, Back and Forth Version A
// Added T7 on except when T1 is on, T8 on except when T3 is on.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence105[] = {
// three track, Back and Forth W/5X Delays Version 3
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000
};

 
const byte sequence106[] = {
// three track, Back and Forth W/2X Delays Version 2
// Added T7 on except when T1 is on, T8 on except when T3 is on.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence107[] = {
    B00000000
};

const byte sequence108[] = {
// 3T Speller
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B00000000,
    B11100000,
    B00000000,
    B11100000,
    B00000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence109[] = {
    B00000000
};

const byte sequence110[] = {
    B00000000
};

const byte sequence111[] = {
    B00000000
};

const byte sequence112[] = {
// 3T Chase W/delay on #1   Version 1  4X Delay   Step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};

const byte sequence113[] = {
    B00000000
};

const byte sequence114[] = {
// 3T Multi sequences
//    Chase Rt 4X
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
    B10010000,
    B01001000,
    B00100100,
//    Chase Lt 6X
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
    B00100100,
    B01001000,
    B10010000,
//    Alt Flash 10X
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
    B10101000,
    B01010100,
//    Build Up 3X
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B10010000,
    B10010000,
    B11011000,
    B11011000,
    B11111100,
    B11111100,
    B11111100,
//    All On 3X
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B11111100,
    B11111100
};

const byte sequence115[] = {
// 3T Chase W/delay on #1  Ver.2 W/6 X delays  
// W/2TC & 3PA Slow  Steps X7
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10001010,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B10010100,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};

const byte sequence116[] = {
// 3T Chase W/delay on 1st & Last  Ver.1  W/4X delays  Step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};

const byte sequence117[] = {
    B00000000
};

const byte sequence118[] = {
// 3T Chase W/delay on 1st & Last  Ver.2  W/6X delays  
// W/2TC on Step#1,Slow and Fast  
// W/1TC on Step#3 track 6
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10001001,
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10001001,
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B10010001,
    B10001010,
    B10001010,
    B10001010,
    B10001001,
    B10001001,
    B10001001,
    B10010010,
    B10010010,
    B10010010,
    B10010001,
    B10010001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000,
    B00100100,
    B00100100,
    B00100100,
    B00100000,
    B00100000
};

const byte sequence119[] = {
// 3T Chase W/delay on #1  Version 2   6X Delays
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};

const byte sequence120[] = {
// 3T Build Up & Down W/4X delay on up   step X5. Added a fast 3TC and a Med 2TC 11-01
//           Shortened the delay o step 5    10-04          
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11110010,
    B11101010,
    B11100101,
    B11110001,
    B11101010,
    B11100110,
    B11110001,
    B11101001,
    B11100110,
    B11110010,
    B11101001,
    B11100101,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence121[] = {
    B00000000
};

const byte sequence122[] = {

// 3T Build Up & Down Ver 2 Cascade   delay on UP, Still turns off for 1 step.
// Had to remove because we ran out of steps.
// Reinstated the 3T Build up & Dn Cascade on 10-04
// I made it faster on 10-4-2015 
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B01100000,
    B01100000,
    B00100000,
    B00100000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence123[] = {
// 3T Build Up & Down Ver 3 Cascade   NO delay on UP, Still turns off for 1 step.
// 1 Line per step instead of 3 lines
// Reinstated the 3T Build up & Dn Cascade on 10-04
// I made it faster and No delay on ALl on,  on 10-4-2015 for Huntsville Botanical  
    B10000000,
    B11000000,
    B11100000,
    B01100000,
    B00100000,
    B00000000
};

const byte sequence124[] = {
// 3T Build Up W/4X delay on 3  W/2TC Slow, 
// 2TC Fast, 1TC Slow  step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11110101,
    B11110100,
    B11110101,
    B11110010,
    B11110011,
    B11110010,
    B11101101,
    B11101100,
    B11101101,
    B11101010,
    B11101011,
    B11101010,
    B11110101,
    B11110100,
    B11110101,
    B11110010,
    B11110011,
    B11110010,
    B11101101,
    B11101100,
    B00000000,
    B00000000
};
const byte sequence125[] = {
    B00000000
};

const byte sequence126[] = {
    B00000000
};

const byte sequence127[] = {
    B00000000
};

const byte sequence128[] = {
// four track chase
    B10001000,
    B01000100,
    B00100010,
    B00010001
};

const byte sequence129[] = {
//Other Special seq. #4 Snowball Fight
//      2 arms and 2 loose balls.
//      Arms dissapear after throws ball.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence130[] = {
// four track chase  Version 2  Slow Chase on 11-03 slowed it down to 12 steps.
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001
};

const byte sequence131[] = {
    B00000000
};

const byte sequence132[] = {
// 4T Negitive Chase 1 out Version 1    1X
    B01110111,
    B10111011,
    B11011101,
    B11101110
};

const byte sequence133[] = {
// 4T Negitive Chase 1 out Ver 3   1X All 8 tracks  OFF
    B01110111,
    B10111011,
    B11011101,
    B11101110
};

const byte sequence134[] = {
// 4T Negitive Chase 2 out Version 2   1X
    B00110011,
    B10011001,
    B11001100,
    B01100110
};

const byte sequence135[] = {
//Chase Ver3  Throwing seq. No delay    4T
//      Track 8 comes on W/step 2 and stays on.
    B10000000,
    B10000000,
    B10000000,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001
};


const byte sequence136[] = {
// Four track, Back and Forth Version A
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence137[] = {
// Four track, Back and Forth W/5X Delays Version 3
// Added T7 on except when T1 is on, T8 on except when T4 is on.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011
};


const byte sequence138[] = {
// Four track, Back and Forth W/3X Delays Version 2
// Added T7 on except when T1 is on, T8 on except when T4 is on.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence139[] = {
    B00000000
};

const byte sequence140[] = {
// 4T Speller
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B11110000,
    B00000000,
    B11110000,
    B00000000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence141[] = {
    B00000000
};

const byte sequence142[] = {
    B00000000
};

const byte sequence143[] = {
    B00000000
};

const byte sequence144[] = {
// 4T Chase W/delay on #1   Ver.1  4X delay  Steps X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000
};

const byte sequence145[] = {
    B00000000
};

const byte sequence146[] = {
// 4T Multi sequences
//    Chase Rt 6X
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
//    Chase Lt 6X
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
//    Alt Flash 10X
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Back & Forth 3X
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100,
    B10001000,
    B01000100,
    B00100010,
    B00010001,
    B00100010,
    B01000100
};

const byte sequence147[] = {
// 4T Chase W/delay on #1   Ver.2  6X delay   
// W/2TC Slow  Steps X7
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000
};

const byte sequence148[] = {
// 4T Chase W/delay on 1st & Last  Ver.1  W/4X delay   Step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000
};

const byte sequence149[] = {
    B00000000
};

const byte sequence150[] = {
// 4T Chase W/delay on 1st & Last  Ver.2 W/6 X delay, 
// W/2TC on step #1 & #4    step X7
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B10001000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010,
    B00010010
};

const byte sequence151[] = {
    B00000000
};

const byte sequence152[] = {
// 4T Build Up & Down W/4X Delay on up   step X5  Added 2TC on step 4  5X on and off
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110001,
    B11110001,
    B11110010,
    B11110010,
    B11110000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence153[] = {
    B00000000
};

const byte sequence154[] = {

// 4T Build Up & Down  Cascade W/4X delay on up   Step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111100,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};


const byte sequence155[] = {
// 4Track Multi  Version 3   Setting 10011011
// 4T Multi sequences Modified This seq on 10-29-00 for Toledo Zoo
//    for a Carosel Display.
// Chase Rt 6X Med Speed
// Alt. Flash 25X Fast
// Build Up Rt. 3X Med
// All On  6X Fast
// All Flash  3X  Med
// Neg Chase Lt  10X Fast


//    Chase Rt 6X   Med
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
//    Alt Flash 10X   Fast
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X  Med
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
//    All On 6X  Fast
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X   Med
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Negitive Chase Lt 10X  Fast
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111
};


const byte sequence156[] = {
// 4T Build Up W/4X delay on step 4      step X5   
//    W/2TC slow and a 2TC fast
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110110,
    B11110101,
    B11110110,
    B11110101,
    B11110110,
    B11110101,
    B11111010,
    B11111001,
    B11111010,
    B11111001,
    B11111010,
    B11111001,
    B11110110,
    B11110101,
    B11110110,
    B11110101,
    B11110110,
    B11110101,
    B11111010,
    B11111001,
    B11111010,
    B00000000,
    B00000000
};

const byte sequence157[] = {
    B00000000
};

const byte sequence158[] = {
// 4T Build Up Version2 W/3X delay on step 4   
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B00000000,
    B00000000
};

const byte sequence159[] = {
    B00000000
};

const byte sequence160[] = {
// five track chase
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000
};

const byte sequence161[] = {
//Other Special seq. #5 Tennis W/2 Rackets
//      2 arms and 4 Loose balls.
    B10100001,
    B10100001,
    B10100001,
    B10100001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B10100001,
    B10100001,
    B10100001,
    B10100001,
    B10010001,
    B10010001,
    B10010001,
    B10010001,
    B10001001,
    B10001001,
    B10001001,
    B10001001,
    B10000101,
    B10000101,
    B10000101,
    B10000101,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000101,
    B10000101,
    B10000101,
    B10000101,
    B10001001,
    B10001001,
    B10001001,
    B10001001,
    B10010001,
    B10010001,
    B10010001,
    B10010001
};

const byte sequence162[] = {
// five track chase  Version 2  Slow Chase
// Added T8 on With step 4&5  added 6 more steps on 11-03
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001
};

const byte sequence163[] = {
    B00000000
};

const byte sequence164[] = {
// 5T Negitive Chase 1 out Version 1    1X
    B01111000,
    B10111000,
    B11011000,
    B11101000,
    B11110000
};

const byte sequence165[] = {
    B00000000
};

const byte sequence166[] = {
// 5T Negitive Chase 2 out Version 2   1X
    B00111000,
    B10011000,
    B11001000,
    B11100000,
    B01110000
};

const byte sequence167[] = {
//Chase Ver3  Throwing seq. No delay    5T   Not Listed on label
//      Track 8 comes on W/step 2 and stays on.
    B10000000,
    B10000000,
    B10000000,
    B01000101,
    B01000101,
    B01000101,
    B00100101,
    B00100101,
    B00100101,
    B00010101,
    B00010101,
    B00010101,
    B00001101,
    B00001101,
    B00001101
};


const byte sequence168[] = {
// Five track, Back and Forth
// Added T7 on except when T1 is on, T6&8 on except when T5 is on.
    B10000001,
    B10000001,
    B10000001,
    B01000111,
    B01000111,
    B01000111,
    B00100111,
    B00100111,
    B00100111,
    B00010111,
    B00010111,
    B00010111,
    B00001110,
    B00001110,
    B00001110,
    B00010111,
    B00010111,
    B00010111,
    B00100111,
    B00100111,
    B00100111,
    B01000111,
    B01000111,
    B01000111
};

const byte sequence169[] = {
// Five track, Back and Forth   W/6X Delays   Ver.3
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence170[] = {
// Five track, Back and Forth   W/4X Delays   Ver.2
// Added T7 on except when T1 is on, T8 on except when T5 is on.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00001010,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};


const byte sequence171[] = {
    B00000000
};

const byte sequence172[] = {
// 5T Speller
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B00000000,
    B11111000,
    B00000000,
    B11111000,
    B00000000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence173[] = {
//  6 Track 6 Step Golfer to be run on a 6TSC for Christmas Done Bright as of 10-4-15
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01100000,
    B01100000,
    B01100000,
    B01010000,
    B01010000,
    B01010000,
    B01001000,
    B01001000,
    B01001000,
    B01001000,
    B01000100,
    B01000100,
    B01000100,
    B01000100,
    B01000000,
    B01000000,
    B01000000,    
};

const byte sequence174[] = {
//  This should be the slot for a 5 track speller  10101110  But we don't have a seq for it
    B00000000
};

const byte sequence175[] = {
//  Save this slot and the # 174 for special Seq for Christmas Done Bright.
    B00000000
};

const byte sequence176[] = {
// 5T Chase W/delay on #1   Ver.1 W/4X delay   Steps X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
};

const byte sequence177[] = {
    B00000000
};

const byte sequence178[] = {
// 5T Multi sequences
//    Chase Rt 5X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
//    Chase Lt 6X
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
//    Alt Flash 10X
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
    B10101000,
    B01010000,
//    Build Up 3X
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
//    All On 3X
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B11111000,
    B11111000,
    B00000000,
    B00000000,
    B11111000,
    B11111000,
//    Back & Forth 3X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00010000,
    B00100000,
    B01000000
};

const byte sequence179[] = {
// 5T Chase W/delay on #1  Ver.2 W/ 6X delay  W/2TC slow  Steps X7
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
};

const byte sequence180[] = {
// 5T Chase W/delay on 1st & Last  Version 1 W/4 X delay    Step X5
//                Track 7&8 to switck 1 time on step 1
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
};

const byte sequence181[] = {
// 5T Chase W/delay on 1st & Last Ver.3  W/6 X delay 
// W/3TC on step#1, 1 Time
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001000,
    B00001000,
    B00001000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001000,
    B00001000,
    B00001000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001
};


const byte sequence182[] = {
// 5T Chase W/delay on 1st & Last Version 2 W/6 X delay  
// W/2TC on step 1 & 1TC on Step 5 Slow
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001000,
    B00001000,
    B00001000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001000,
    B00001000,
    B00001000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001000,
    B00001000,
    B00001000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001
};

const byte sequence183[] = {
    B00000000
};

const byte sequence184[] = {
// 5T Build Up & Down W/4X Delay on up    step X5  Added 2TC on step 5  5X on and off
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11111001,
    B11111001,
    B11111010,
    B11111010,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence185[] = {
    B00000000
};

const byte sequence186[] = {

// 5T Build Up & Down  Cascade W/ delay on up   W/4X delay on up   Step X5
// Had to remove because we ran out of steps.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00000000,
    B00000000,
    B00000000
};


const byte sequence187[] = {
// Temp Same as seq 155 But W/Slow Chase to see what looks better.
// Placement for the 5 Track Multi Ver 3. Wasn't being used.
// 4Track Multi  Version 3  use setting 10111011 for seq 187
// 4T Multi sequences Modified This seq on 10-29-00 for Toledo Zoo
//    for a Carosel Display.
// Chase Rt 6X Med Speed
// Alt. Flash 25X Fast
// Build Up Rt. 3X Med
// All On  6X Fast
// All Flash  3X  Med
// Neg Chase Lt  10X Fast


//    Chase Rt 6X   Slow
    B10001000,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B00010001,
    B10001000,
    B10001000,
    B10001000,
    B01000100,
    B01000100,
    B01000100,
    B00100010,
    B00100010,
    B00100010,
    B00010001,
    B00010001,
    B00010001,
//    Alt Flash 10X   Fast
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
//    Build Up 3X  Med
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B10001000,
    B10001000,
    B11001100,
    B11001100,
    B11101110,
    B11101110,
    B11111111,
    B11111111,
    B11111111,
//    All On 6X  Fast
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X   Med
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B11111111,
    B11111111,
//    Negitive Chase Lt 10X  Fast
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111,
    B11101110,
    B11011101,
    B10111011,
    B01110111
};


const byte sequence188[] = {
// 5T Build Up W/4X delay on 5  W/2TC and a Fast 1TC1  step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111011,
    B11111010,
    B11111011,
    B11111100,
    B11111101,
    B11111100,
    B11111011,
    B11111010,
    B11111011,
    B11111100,
    B11111101,
    B11111100,
    B11111011,
    B11111010,
    B11111011,
    B11111100,
    B11111101,
    B11111100,
    B11111011,
    B11111010,
    B00000000,
    B00000000
};

const byte sequence189[] = {
// 4T Peacock Build Up and Dn W/Shimmer on step 5 and T6 for Center Feathers  added 10-11-15
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B11000100,
    B11000100,
    B11000100,
    B11000100,
    B11000100,
    B11100100,
    B11100100,
    B11100100,
    B11100100,
    B11100100,
    B11110100,
    B11110100,
    B11110100,
    B11110100,
    B11110100,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B11110100,
    B11110100,
    B11110101,
    B11110101,
    B11110110,
    B11100100,
    B11100100,
    B11100100,
    B11100100,
    B11100100,
    B11000100,
    B11000100,
    B11000100,
    B11000100,
    B11000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence190[] = {
// 6T Peacock 5T Build Up and Dn W/Shimmer on step 6 and T6 for Center Feathers
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B11000100,
    B11000100,
    B11000100,
    B11000100,
    B11000100,
    B11100100,
    B11100100,
    B11100100,
    B11100100,
    B11100100,
    B11110100,
    B11110100,
    B11110100,
    B11110100,
    B11110100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B01010101,
    B10101001,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11110100,
    B11110100,
    B11110101,
    B11110101,
    B11110110,
    B11100100,
    B11100100,
    B11100100,
    B11100100,
    B11100100,
    B11000100,
    B11000100,
    B11000100,
    B11000100,
    B11000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B10000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence191[] = {
// 8T Peacock 7T Build Up and Dn W/Shimmer on step 8 T8 for Center feathers added 10-11-15
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B11000001,
    B11000001,
    B11000001,
    B11000001,
    B11000001,
    B11100001,
    B11100001,
    B11100001,
    B11100001,
    B11100001,
    B11110001,
    B11110001,
    B11110001,
    B11110001,
    B11110001,
    B11111001,
    B11111001,
    B11111001,
    B11111001,
    B11111001,
    B11111101,
    B11111101,
    B11111101,
    B11111101,
    B11111101,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B01010101,
    B10101010,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111101,
    B11111101,
    B11111101,
    B11111101,
    B11111101,
    B11111001,
    B11111001,
    B11111001,
    B11111001,
    B11110001,
    B11110001,
    B11110001,
    B11110001,
    B11110001,
    B11100001,
    B11100001,
    B11100001,
    B11100001,
    B11100001,
    B11000001,
    B11000001,
    B11000001,
    B11000001,
    B11000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001,
    B00000001
};

const byte sequence192[] = {
// six track chase
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100
};

const byte sequence193[] = {
//Other Special seq. #6 Tennis W/3 Rackets
//      3 arms and 4 Loose balls.
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000010,
    B01000010,
    B01000010,
    B01000010,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B01000010,
    B01000010,
    B01000010,
    B01000010
};


const byte sequence194[] = {
// six track chase  Version 2  Slow Chase on 11-03 made 2X as slow as it was.
// added 8T on for step 5&6
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101
};

const byte sequence195[] = {
//Other seq,   Golfer2 W/3 Back clubs and 5 balls
// 11-10-01 Special sequence. W 2 practice swings.  use 11000011 
    B00110000,
    B00110000,
    B00110000,
    B01010000,
    B01010000,
    B00110000,
    B00110000,
    B01010000,
    B01010000,
    B00110000,
    B00110000,
    B00110000,
    B01010000,
    B01010000,
    B10010000,
    B10010000,
    B01010000,
    B01010000,
    B00110000,
    B00101000,
    B00101000,
    B00100100,
    B00100100,
    B00100010,
    B00100010,
    B00100010,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B00100000,
    B00100000,
    B00100000,
    B00100000
};


const byte sequence196[] = {
// 6T Negitive Chase 1 out Version 1   1X
    B01111100,
    B10111100,
    B11011100,
    B11101100,
    B11110100,
    B11111000
};

const byte sequence197[] = {
    B00000000
};

const byte sequence198[] = {
// 6T Negitive Chase 2 out Version 2    1X
    B00111100,
    B10011100,
    B11001100,
    B11100100,
    B11110000,
    B01111000
};

const byte sequence199[] = {
//Chase Ver3  Throwing seq. No delay    6T  NOT Listed on Label
//      Track 8 comes on W/step 2 and stays on.
    B10000000,
    B10000000,
    B10000000,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101
};

const byte sequence200[] = {
// Six track, Back and Forth Version A
// Added T7 on except when T1 is on, T8 on except when T6 is on.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00001011,
    B00001011,
    B00001011,
    B00001011,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00001011,
    B00001011,
    B00001011,
    B00001011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence201[] = {
// Six track, Back and Forth   W/ 6X Delays   Version 3
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};

const byte sequence202[] = {
// Six track, Back and Forth   W/ 4X Delays   Ver.2
// Added T7 on except when T1 is on, T8 on except when T6 is on.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000011,
    B01000011,
    B01000011,
    B01000011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00001011,
    B00001011,
    B00001011,
    B00001011,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00001011,
    B00001011,
    B00001011,
    B00001011,
    B00010011,
    B00010011,
    B00010011,
    B00010011,
    B00100011,
    B00100011,
    B00100011,
    B00100011,
    B01000011,
    B01000011,
    B01000011,
    B01000011
};

const byte sequence203[] = {
    B00000000
};

const byte sequence204[] = {
// 6T Speller
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B11111100,
    B00000000,
    B11111100,
    B00000000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence205[] = {
    B00000000
};

const byte sequence206[] = {
    B00000000
};

const byte sequence207[] = {
    B00000000
};

const byte sequence208[] = {
// 6T Chase W/delay on #1   Ver.1   W/4X Delay    Steps X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence209[] = {
    B00000000
};

const byte sequence210[] = {
// 6T Multi sequences
//    Chase Rt 5X
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
//    Chase Lt 6X
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
//    Alt Flash 10X
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
    B10101011,
    B01010111,
//    Build Up 3X
    B10000011,
    B10000011,
    B11000011,
    B11000011,
    B11100011,
    B11100011,
    B11110011,
    B11110011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B10000011,
    B10000011,
    B11000011,
    B11000011,
    B11100011,
    B11100011,
    B11110011,
    B11110011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B10000011,
    B10000011,
    B11000011,
    B11000011,
    B11100011,
    B11100011,
    B11110011,
    B11110011,
    B11111011,
    B11111011,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All On 3X
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
//    All Flash 3X
    B00000011,
    B00000011,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B11111111,
    B11111111,
    B00000011,
    B00000011,
    B11111111,
    B11111111,
//    Back & Forth 3X
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011,
    B10000011,
    B01000011,
    B00100011,
    B00010011,
    B00001011,
    B00000111,
    B00001011,
    B00010011,
    B00100011,
    B01000011
};

const byte sequence211[] = {
// 6T Chase W/delay on #1   Ver.2  W/6X Delay  W/2TC slow  Steps X7
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence212[] = {
// 6T Chase W/delay on 1st & Last   Version 1  W/4X delay    step X5
//      Add track 7&8 switck one time on step 1
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence213[] = {
// 6T Chase W/delay on 1st & Last  Ver.3  W/6 X delay  W/2TC on #6 Slow
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000101,
    B00000101,
    B00000101,
    B00000101
};


const byte sequence214[] = {
// 6T Chase W/delay on 1st & Last   Ver.2  W 6 X delay  
// W/2TC on step 1  Slow
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence215[] = {
// 6T Chase W/delay on 1st & Last Ver.4 W/6 X delay 
// W/2TC on step 1  Only 1 change
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100
};

const byte sequence216[] = {
// 6T Build Up & Down W/4 Delay on up   Step X5  added a 2TC on 6th step 5X on and off
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence217[] = {
    B00000000
};

const byte sequence218[] = {

// 6T Build Up & Down  Cascade W/ delay on up  Ver2 W/4X delay on up   Step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};


const byte sequence219[] = {
    B00000000
};

const byte sequence220[] = {
// 6T Build Up W/4X delay on 6   W/2TC on step 6    step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111101,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B11111101,
    B11111110,
    B11111110,
    B11111110,
    B11111101,
    B11111101,
    B00000000,
    B00000000
};

const byte sequence221[] = {
    B00000000
};

const byte sequence222[] = {
    B00000000
};

const byte sequence223[] = {
    B00000000
};

const byte sequence224[] = {
// seven track chase
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010
};

const byte sequence225[] = {
//Other Special seq. #7  Cannonball W 5 Balls
//      2 arms, smoke, 4 balls & an explosion.
//   4X delay on step1, 2X step2, 2X delay on last step.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01100000,
    B01100000,
    B01100000,
    B10110000,
    B10110000,
    B10110000,
    B10001000,
    B10001000,
    B10001000,
    B10000100,
    B10000100,
    B10000100,
    B10000010,
    B10000010,
    B10000010,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001
};


const byte sequence226[] = {
// seven track chase  Version 2  Slow Chase  added another 6 steps on 11-03
// added 8T on for step 6&7
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011
};

const byte sequence227[] = {

// Used as a place for temp sequences  started 11-11-01
// setting 11100011
// Building a snowman  for Old Orchard
    B00101000,
    B01101000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11110100,
    B11110100,
    B11110100,
    B11110100,
    B11110110,
    B01100110,
    B00100110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00000110,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000
};

const byte sequence228[] = {
// 7T Negitive Chase 1 out Version 1
    B01111110,
    B10111110,
    B11011110,
    B11101110,
    B11110110,
    B11111010,
    B11111100
};

const byte sequence229[] = {
    B00000000
};

const byte sequence230[] = {
// 7T Negitive Chase 2 out Version 2    1X
    B00111110,
    B10011110,
    B11001110,
    B11100110,
    B11110010,
    B11111000,
    B01111100
};

const byte sequence231[] = {
//Chase Ver3  Throwing seq. No delay    7T
//      Track 8 comes on W/step 2 and stays on.
    B10000000,
    B10000000,
    B10000000,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000011,
    B00000011,
    B00000011
};


const byte sequence232[] = {
// Seven track, Back and Forth Version A
// Added T8 on except when T7 is on.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B01000001,
    B01000001,
    B01000001,
    B01000001
};

const byte sequence233[] = {
// Seven track, Back and Forth W/6X Delays Version 3
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B01000000,
    B01000000,
    B01000000,
    B01000000
};


const byte sequence234[] = {
// Seven track, Back and Forth W/4X Delays Version 2
// Added T8 on except when T7 is on.
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000001,
    B01000001,
    B01000001,
    B01000001,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000101,
    B00000101,
    B00000101,
    B00000101,
    B00001001,
    B00001001,
    B00001001,
    B00001001,
    B00010001,
    B00010001,
    B00010001,
    B00010001,
    B00100001,
    B00100001,
    B00100001,
    B00100001,
    B01000001,
    B01000001,
    B01000001,
    B01000001
};

const byte sequence235[] = {
    B00000000
};

const byte sequence236[] = {
// 7T Speller
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B00000000,
    B11111110,
    B00000000,
    B11111110,
    B00000000,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence237[] = {
    B00000000
};

const byte sequence238[] = {
    B00000000
};

const byte sequence239[] = {
    B00000000
};

const byte sequence240[] = {
// 7T Chase W/delay on #1   Ver.1   W/4X dealay  Steps X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence241[] = {
    B00000000
};

const byte sequence242[] = {
// 7T Multi sequences
//    Chase Rt 5X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
//    Chase Lt 6X
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
//    Alt Flash 10X
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
    B10101010,
    B01010100,
//    Build Up 3X
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
//    All On 3X
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
//    All Flash 3X
    B00000000,
    B00000000,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B11111110,
    B11111110,
    B00000000,
    B00000000,
    B11111110,
    B11111110,
//    Back & Forth 4X
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000,
    B01000000,
    B00100000,
    B00010000,
    B00001000,
    B00000100,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000
};

const byte sequence243[] = {
// 7T Chase W/delay on #1   Ver.2   W/6 X dealay  
// W/1TC Slow  Steps X7
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence244[] = {
// 7T Chase W/delay on 1st & Last   Ver.1  W/4X delay   step X5
//    Add track 8 comes on 1/2 way through step one, then off after step 1.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence245[] = {
    B00000000
};

const byte sequence246[] = {
// 7T Chase W/delay on 1st & Last   Ver.2  W/6 X delay  
// W/1TC on #1 Slow
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B10000000,
    B10000000,
    B10000000,
    B10000001,
    B10000001,
    B10000001,
    B10000001,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B01000000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00100000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00010000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00001000,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000100,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010,
    B00000010
};

const byte sequence247[] = {
    B00000000
};

const byte sequence248[] = {
// 7T Build Up & Down W/4 Delay on up    step X5. Added 1TC 5X on step 7   11-01
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B00000000,
    B00000000
};

const byte sequence249[] = {
    B00000000
};

const byte sequence250[] = {

// 7T Build Up & Down Cascade W/ delay on up   W/4X delay on up   Step X5
// Had to remove because we are out of steps.
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B11111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B01111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00111111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00011111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00001111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000111,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000011,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence251[] = {
    B00000000
};

const byte sequence252[] = {
// 7T Build Up W/4X delay on 7  W/1TC on step 7  step X5
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B10000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11000000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11100000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11110000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111000,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111100,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B11111110,
    B11111110,
    B11111111,
    B11111111,
    B11111111,
    B00000000,
    B00000000,
    B00000000
};

const byte sequence253[] = {
    B00000000
};

const byte sequence254[] = {
    B00000000
};

const byte sequence255[] = {
    B00000001,
    B00000010,
    B00000100,
    B00001000,
    B00010000,
    B00100000,
    B01000000,
    B10000000
};

/**************************************************
 *         Do not modify below this line          *
 **************************************************/

const byte *ptrSequences[] = {
    sequence0,
    sequence1,
    sequence2,
    sequence3,
    sequence4,
    sequence5,
    sequence6,
    sequence7,
    sequence8,
    sequence9,
    sequence10,
    sequence11,
    sequence12,
    sequence13,
    sequence14,
    sequence15,
    sequence16,
    sequence17,
    sequence18,
    sequence19,
    sequence20,
    sequence21,
    sequence22,
    sequence23,
    sequence24,
    sequence25,
    sequence26,
    sequence27,
    sequence28,
    sequence29,
    sequence30,
    sequence31,
    sequence32,
    sequence33,
    sequence34,
    sequence35,
    sequence36,
    sequence37,
    sequence38,
    sequence39,
    sequence40,
    sequence41,
    sequence42,
    sequence43,
    sequence44,
    sequence45,
    sequence46,
    sequence47,
    sequence48,
    sequence49,
    sequence50,
    sequence51,
    sequence52,
    sequence53,
    sequence54,
    sequence55,
    sequence56,
    sequence57,
    sequence58,
    sequence59,
    sequence60,
    sequence61,
    sequence62,
    sequence63,
    sequence64,
    sequence65,
    sequence66,
    sequence67,
    sequence68,
    sequence69,
    sequence70,
    sequence71,
    sequence72,
    sequence73,
    sequence74,
    sequence75,
    sequence76,
    sequence77,
    sequence78,
    sequence79,
    sequence80,
    sequence81,
    sequence82,
    sequence83,
    sequence84,
    sequence85,
    sequence86,
    sequence87,
    sequence88,
    sequence89,
    sequence90,
    sequence91,
    sequence92,
    sequence93,
    sequence94,
    sequence95,
    sequence96,
    sequence97,
    sequence98,
    sequence99,
    sequence100,
    sequence101,
    sequence102,
    sequence103,
    sequence104,
    sequence105,
    sequence106,
    sequence107,
    sequence108,
    sequence109,
    sequence110,
    sequence111,
    sequence112,
    sequence113,
    sequence114,
    sequence115,
    sequence116,
    sequence117,
    sequence118,
    sequence119,
    sequence120,
    sequence121,
    sequence122,
    sequence123,
    sequence124,
    sequence125,
    sequence126,
    sequence127,
    sequence128,
    sequence129,
    sequence130,
    sequence131,
    sequence132,
    sequence133,
    sequence134,
    sequence135,
    sequence136,
    sequence137,
    sequence138,
    sequence139,
    sequence140,
    sequence141,
    sequence142,
    sequence143,
    sequence144,
    sequence145,
    sequence146,
    sequence147,
    sequence148,
    sequence149,
    sequence150,
    sequence151,
    sequence152,
    sequence153,
    sequence154,
    sequence155,
    sequence156,
    sequence157,
    sequence158,
    sequence159,
    sequence160,
    sequence161,
    sequence162,
    sequence163,
    sequence164,
    sequence165,
    sequence166,
    sequence167,
    sequence168,
    sequence169,
    sequence170,
    sequence171,
    sequence172,
    sequence173,
    sequence174,
    sequence175,
    sequence176,
    sequence177,
    sequence178,
    sequence179,
    sequence180,
    sequence181,
    sequence182,
    sequence183,
    sequence184,
    sequence185,
    sequence186,
    sequence187,
    sequence188,
    sequence189,
    sequence190,
    sequence191,
    sequence192,
    sequence193,
    sequence194,
    sequence195,
    sequence196,
    sequence197,
    sequence198,
    sequence199,
    sequence200,
    sequence201,
    sequence202,
    sequence203,
    sequence204,
    sequence205,
    sequence206,
    sequence207,
    sequence208,
    sequence209,
    sequence210,
    sequence211,
    sequence212,
    sequence213,
    sequence214,
    sequence215,
    sequence216,
    sequence217,
    sequence218,
    sequence219,
    sequence220,
    sequence221,
    sequence222,
    sequence223,
    sequence224,
    sequence225,
    sequence226,
    sequence227,
    sequence228,
    sequence229,
    sequence230,
    sequence231,
    sequence232,
    sequence233,
    sequence234,
    sequence235,
    sequence236,
    sequence237,
    sequence238,
    sequence239,
    sequence240,
    sequence241,
    sequence242,
    sequence243,
    sequence244,
    sequence245,
    sequence246,
    sequence247,
    sequence248,
    sequence249,
    sequence250,
    sequence251,
    sequence252,
    sequence253,
    sequence254,
    sequence255
};

const word sequenceLengths[] = {
    sizeof sequence0,
    sizeof sequence1,
    sizeof sequence2,
    sizeof sequence3,
    sizeof sequence4,
    sizeof sequence5,
    sizeof sequence6,
    sizeof sequence7,
    sizeof sequence8,
    sizeof sequence9,
    sizeof sequence10,
    sizeof sequence11,
    sizeof sequence12,
    sizeof sequence13,
    sizeof sequence14,
    sizeof sequence15,
    sizeof sequence16,
    sizeof sequence17,
    sizeof sequence18,
    sizeof sequence19,
    sizeof sequence20,
    sizeof sequence21,
    sizeof sequence22,
    sizeof sequence23,
    sizeof sequence24,
    sizeof sequence25,
    sizeof sequence26,
    sizeof sequence27,
    sizeof sequence28,
    sizeof sequence29,
    sizeof sequence30,
    sizeof sequence31,
    sizeof sequence32,
    sizeof sequence33,
    sizeof sequence34,
    sizeof sequence35,
    sizeof sequence36,
    sizeof sequence37,
    sizeof sequence38,
    sizeof sequence39,
    sizeof sequence40,
    sizeof sequence41,
    sizeof sequence42,
    sizeof sequence43,
    sizeof sequence44,
    sizeof sequence45,
    sizeof sequence46,
    sizeof sequence47,
    sizeof sequence48,
    sizeof sequence49,
    sizeof sequence50,
    sizeof sequence51,
    sizeof sequence52,
    sizeof sequence53,
    sizeof sequence54,
    sizeof sequence55,
    sizeof sequence56,
    sizeof sequence57,
    sizeof sequence58,
    sizeof sequence59,
    sizeof sequence60,
    sizeof sequence61,
    sizeof sequence62,
    sizeof sequence63,
    sizeof sequence64,
    sizeof sequence65,
    sizeof sequence66,
    sizeof sequence67,
    sizeof sequence68,
    sizeof sequence69,
    sizeof sequence70,
    sizeof sequence71,
    sizeof sequence72,
    sizeof sequence73,
    sizeof sequence74,
    sizeof sequence75,
    sizeof sequence76,
    sizeof sequence77,
    sizeof sequence78,
    sizeof sequence79,
    sizeof sequence80,
    sizeof sequence81,
    sizeof sequence82,
    sizeof sequence83,
    sizeof sequence84,
    sizeof sequence85,
    sizeof sequence86,
    sizeof sequence87,
    sizeof sequence88,
    sizeof sequence89,
    sizeof sequence90,
    sizeof sequence91,
    sizeof sequence92,
    sizeof sequence93,
    sizeof sequence94,
    sizeof sequence95,
    sizeof sequence96,
    sizeof sequence97,
    sizeof sequence98,
    sizeof sequence99,
    sizeof sequence100,
    sizeof sequence101,
    sizeof sequence102,
    sizeof sequence103,
    sizeof sequence104,
    sizeof sequence105,
    sizeof sequence106,
    sizeof sequence107,
    sizeof sequence108,
    sizeof sequence109,
    sizeof sequence110,
    sizeof sequence111,
    sizeof sequence112,
    sizeof sequence113,
    sizeof sequence114,
    sizeof sequence115,
    sizeof sequence116,
    sizeof sequence117,
    sizeof sequence118,
    sizeof sequence119,
    sizeof sequence120,
    sizeof sequence121,
    sizeof sequence122,
    sizeof sequence123,
    sizeof sequence124,
    sizeof sequence125,
    sizeof sequence126,
    sizeof sequence127,
    sizeof sequence128,
    sizeof sequence129,
    sizeof sequence130,
    sizeof sequence131,
    sizeof sequence132,
    sizeof sequence133,
    sizeof sequence134,
    sizeof sequence135,
    sizeof sequence136,
    sizeof sequence137,
    sizeof sequence138,
    sizeof sequence139,
    sizeof sequence140,
    sizeof sequence141,
    sizeof sequence142,
    sizeof sequence143,
    sizeof sequence144,
    sizeof sequence145,
    sizeof sequence146,
    sizeof sequence147,
    sizeof sequence148,
    sizeof sequence149,
    sizeof sequence150,
    sizeof sequence151,
    sizeof sequence152,
    sizeof sequence153,
    sizeof sequence154,
    sizeof sequence155,
    sizeof sequence156,
    sizeof sequence157,
    sizeof sequence158,
    sizeof sequence159,
    sizeof sequence160,
    sizeof sequence161,
    sizeof sequence162,
    sizeof sequence163,
    sizeof sequence164,
    sizeof sequence165,
    sizeof sequence166,
    sizeof sequence167,
    sizeof sequence168,
    sizeof sequence169,
    sizeof sequence170,
    sizeof sequence171,
    sizeof sequence172,
    sizeof sequence173,
    sizeof sequence174,
    sizeof sequence175,
    sizeof sequence176,
    sizeof sequence177,
    sizeof sequence178,
    sizeof sequence179,
    sizeof sequence180,
    sizeof sequence181,
    sizeof sequence182,
    sizeof sequence183,
    sizeof sequence184,
    sizeof sequence185,
    sizeof sequence186,
    sizeof sequence187,
    sizeof sequence188,
    sizeof sequence189,
    sizeof sequence190,
    sizeof sequence191,
    sizeof sequence192,
    sizeof sequence193,
    sizeof sequence194,
    sizeof sequence195,
    sizeof sequence196,
    sizeof sequence197,
    sizeof sequence198,
    sizeof sequence199,
    sizeof sequence200,
    sizeof sequence201,
    sizeof sequence202,
    sizeof sequence203,
    sizeof sequence204,
    sizeof sequence205,
    sizeof sequence206,
    sizeof sequence207,
    sizeof sequence208,
    sizeof sequence209,
    sizeof sequence210,
    sizeof sequence211,
    sizeof sequence212,
    sizeof sequence213,
    sizeof sequence214,
    sizeof sequence215,
    sizeof sequence216,
    sizeof sequence217,
    sizeof sequence218,
    sizeof sequence219,
    sizeof sequence220,
    sizeof sequence221,
    sizeof sequence222,
    sizeof sequence223,
    sizeof sequence224,
    sizeof sequence225,
    sizeof sequence226,
    sizeof sequence227,
    sizeof sequence228,
    sizeof sequence229,
    sizeof sequence230,
    sizeof sequence231,
    sizeof sequence232,
    sizeof sequence233,
    sizeof sequence234,
    sizeof sequence235,
    sizeof sequence236,
    sizeof sequence237,
    sizeof sequence238,
    sizeof sequence239,
    sizeof sequence240,
    sizeof sequence241,
    sizeof sequence242,
    sizeof sequence243,
    sizeof sequence244,
    sizeof sequence245,
    sizeof sequence246,
    sizeof sequence247,
    sizeof sequence248,
    sizeof sequence249,
    sizeof sequence250,
    sizeof sequence251,
    sizeof sequence252,
    sizeof sequence253,
    sizeof sequence254,
    sizeof sequence255
};